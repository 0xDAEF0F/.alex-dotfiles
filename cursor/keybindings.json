[
  {
    "command": "-workbench.action.openSettings",
    "key": "cmd+,"
  },
  {
    "command": "breadcrumbs.focusAndSelect",
    "key": "cmd+,"
  },
  {
    "command": "workbench.action.navigateBack",
    "key": "ctrl+o",
    "when": "canNavigateBack"
  },
  {
    "command": "workbench.action.navigateForward",
    "key": "ctrl+i",
    "when": "canNavigateForward"
  },
  {
    "command": "hideSuggestWidget",
    "key": "ctrl+c",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    // this is not necessary right now
    "command": "workbench.panel.aichat.view.focus",
    "key": "cmd+2"
  },
  // git source control toggle
  {
    "command": "workbench.view.scm",
    "key": "cmd+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  // file tree toggle
  {
    "command": "-actions.findWithSelection",
    "key": "cmd+e"
  },
  {
    "command": "workbench.view.explorer",
    "key": "cmd+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  // does this only work with github copilot?
  {
    "command": "editor.action.inlineSuggest.trigger",
    "key": "ctrl+cmd+s",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "alt+r"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+q",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.q && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-workbench.action.quickOpenView",
    "key": "ctrl+q"
  },
  {
    "command": "-editor.action.previousMatchFindAction",
    "key": "shift+cmd+g",
    "when": "editorFocus"
  },
  {
    "command": "-markdown.extension.editing.toggleBold",
    "key": "cmd+b",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "command": "git.openChange",
    "key": "shift+cmd+g"
  },
  {
    "command": "-workbench.action.selectTheme",
    "key": "cmd+r cmd+t"
  },
  {
    "command": "workbench.action.openSettingsJson",
    "key": "cmd+t cmd+s"
  },
  {
    "args": "<C-u>",
    // send our own <C-d> keybinding to neovim directly
    "command": "vscode-neovim.send",
    "key": "ctrl+u",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "args": "<C-d>",
    // send our own <C-d> keybinding to neovim directly
    "command": "vscode-neovim.send",
    "key": "ctrl+d",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "args": "<C-f>",
    // send our own <C-f> keybinding to neovim directly
    "command": "vscode-neovim.send",
    "key": "ctrl+f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "args": "<C-b>",
    // send our own <C-b> keybinding to neovim directly
    "command": "vscode-neovim.send",
    "key": "ctrl+b",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.b && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.ctrl-d",
    // disable the default nvim ctrl+d keybinding
    "key": "ctrl+d",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.ctrl-u",
    // disable the default nvim ctrl+u keybinding
    "key": "ctrl+u",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.ctrl-b",
    // disable the default nvim ctrl+b keybinding
    "key": "ctrl+b",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.b && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.ctrl-f",
    // disable the default nvim ctrl+f keybinding
    "key": "ctrl+f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-workbench.action.openGlobalKeybindings",
    "key": "cmd+r cmd+s"
  },
  {
    "command": "workbench.action.openGlobalKeybindingsFile",
    "key": "cmd+r cmd+s"
  },
  {
    "command": "-editor.action.addSelectionToNextFindMatch",
    "key": "cmd+d",
    "when": "editorFocus"
  },
  {
    "command": "-markdown.extension.editing.toggleMath",
    "key": "cmd+m",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "command": "-whisperAssistant.toggleRecording",
    "key": "ctrl+u"
  },
  {
    "command": "workbench.action.openGlobalKeybindings",
    "key": "cmd+r cmd+t"
  },
  {
    "command": "-markdown.extension.editing.toggleItalic",
    "key": "cmd+i",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "key": "cmd+e",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "shift+cmd+right",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "cmd+right",
    "command": "-editor.action.inlineSuggest.acceptNextWord",
    "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
  }
]
