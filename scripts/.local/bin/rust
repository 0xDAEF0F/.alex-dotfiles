#!/usr/bin/env bash

if [ -z "$1" ]; then
    echo "no project name provided"
    exit 1
fi

cargo new --bin "$1"
cd "$1"

# copy config files
rustcpconf

cargo add anyhow                   # error handling
cargo add dotenvy                  # environment variables
cargo add tokio --features full    # async runtime
cargo add serde_json               # json serialization
cargo add serde --features derive  # serialization
cargo add itertools chrono reqwest # utils
cargo add thin-logger colored      # logging

# experimental
cargo add derive_more --features full    # derive macros for more traits
cargo add variantly                      # introspection for enum variants
cargo add validator                      # validation library
cargo add tap                            # tapping into values for debugging
cargo add bon                            # builder pattern
cargo add strum strum_macros             # set of macros and traits for working with enums and strings
cargo add parking_lot --features nightly # mutexes without unwraps
cargo add nestruct                       # nested structs

echo "
#![allow(unused)]
#![allow(clippy::all)]

use anyhow::Result;
use thin_logger::{log, build};

#[tokio::main]
async fn main() -> Result<()> {
    dotenvy::dotenv_override().ok(); // load .env file
    build(None).init(); // init logging

    log::info!(\"Hello, world!\");

    Ok(())  
}
" >src/main.rs

cargo fmt

git add .

git commit -m "(feat): initialize project"

cursor .
